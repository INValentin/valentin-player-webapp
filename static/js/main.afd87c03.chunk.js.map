{"version":3,"sources":["components/Header.js","components/Footer.js","components/Track.js","components/PlayList.js","components/Player.js","components/Music.js","components/Main.js","App.js","index.js"],"names":["Header","className","href","Footer","Track","isPlaying","onPlay","dragIndex","index","onDelete","onDragged","track","onDrop","useState","trackEl","setTrackEl","dragOver","setDragOver","dragged","setDragged","useEffect","addEventListener","e","h","offsetHeight","dir","offsetY","classList","remove","add","onClick","onDragStart","onDragOver","isUp","contains","onDragEnd","onDragLeave","ref","data-index","draggable","name","stopPropagation","PlayList","current","list","onAdd","onRemove","onPrev","onNext","onArrange","setDragIndex","addTrackBtn","useRef","dragIndexHandler","window","ondragover","preventDefault","ondrop","dataTransfer","files","length","forEach","tr","click","multiple","accept","style","display","type","onChange","tracks","target","map","key","ProgressLineWrapper","setLine","eventHandler","level","wrapper","setWrapper","eventset","setEventset","width","Player","onTrackEnded","mediaSrc","loop","shouldHideControls","setShouldHideControls","canHideControls","setCanHideControls","shouldGoFull","setShouldGoFull","timeoutRef","playerRef","canPlay","setCanPlay","paused","setPaused","playing","setPlaying","vol","setVol","muted","setMuted","video","setVideo","volLine","setVolLine","timeLine","setTimeLine","timeEl","setTimeEl","pauseHandler","pause","playHandler","play","playToggleHandler","formatTime","seconds","hours","mins","secs","prepend0","val","String","Math","floor","handleMouseMove","useCallback","currentTimeoutRef","clearTimeout","setTimeout","isFull","document","fullscreenElement","playerEl","requestFullscreen","exitFullscreen","volume","onMouseLeave","onMouseMove","onCanPlay","onPause","onPlaying","onVolumeChange","percentage","onTimeUpdate","currentTime","duration","innerText","onEnded","onError","autoPlay","src","poster","onMouseOver","closest","prev","progressWrapper","offsetX","offsetWidth","Music","videoRef","createElement","Audio","setCurrent","setList","file","URL","createObjectURL","nextHandler","newList","findIndex","newIndex","filter","canPlayType","some","splice","inFrontList","frontList","slice","backList","Main","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.afd87c03.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav>\r\n            <div className=\"logo\">\r\n                <span>VAL</span>\r\n                <i className=\"material-icons\">music_note</i>\r\n            </div>\r\n            <ul>\r\n                <li><a className=\"icon\" href=\"#!\"><i className=\"material-icons\">share</i></a></li>\r\n                <li><a className=\"icon\" href=\"#!\"><i className=\"material-icons\">live_tv</i></a></li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            &copy;Valentin\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from 'react'\r\n\r\nconst Track = ({\r\n    isPlaying,\r\n    onPlay,\r\n    dragIndex,\r\n    index,\r\n    onDelete,\r\n    onDragged,\r\n    track,\r\n    onDrop }) => {\r\n\r\n    const [trackEl, setTrackEl] = useState(null)\r\n    const [dragOver, setDragOver] = useState(false)\r\n    const [dragged, setDragged] = useState(false)\r\n\r\n    const dragstartHandler = e => {\r\n        setDragged(true)\r\n        onDragged(index)\r\n    }\r\n    \r\n    const dragoverHandler = e => {\r\n        setDragOver(true)\r\n    }\r\n\r\n    const dragendHandler = e => {\r\n        setDragOver(false)\r\n        setDragged(false)\r\n        onDragged(null)\r\n    }\r\n    \r\n    const dragLeaveHandler = e => {\r\n        trackEl.classList.remove('up')\r\n        trackEl.classList.remove('down')\r\n        setDragOver(false)\r\n    }\r\n    \r\n    const dropHandler = e => {\r\n        setDragged(false)\r\n        setDragOver(false)\r\n        const isUp = trackEl.classList.contains('up')\r\n        trackEl.classList.remove('up')\r\n        trackEl.classList.remove('down')\r\n        onDrop(dragIndex, index, isUp)\r\n        onDragged(null)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (trackEl) {\r\n            trackEl.addEventListener('dragover', e => {\r\n                let h = trackEl.offsetHeight\r\n                let o = e.offsetY\r\n                \r\n                let dir = (h - o) >= (h / 2) ? 'up' : 'down';\r\n                \r\n                if (dir === 'up') {\r\n                    trackEl.classList.remove('down')\r\n                } else {\r\n                    trackEl.classList.remove('up')\r\n                }\r\n                trackEl.classList.add(dir)\r\n            })\r\n        }\r\n    }, [trackEl])\r\n\r\n    return (\r\n        <div\r\n            // events\r\n            onClick={() => { !isPlaying && onPlay(track) }}\r\n            onDragStart={dragstartHandler}\r\n            onDragOver={dragoverHandler}\r\n            onDrop={dropHandler}\r\n            onDragEnd={dragendHandler}\r\n            onDragLeave={dragLeaveHandler}\r\n\r\n            // attributes\r\n            ref={setTrackEl}\r\n            data-index={index}\r\n            draggable={true}\r\n            className={`\r\n                track ${isPlaying ? \"playing\" : \"\"}\r\n                ${dragged ? \"dragged\" : \"\"}\r\n                ${dragOver ? \"dragover\" : \"\"}\r\n            `}\r\n        >\r\n            <h6 className=\"track-name\">Track {track.name}</h6>\r\n            <div className=\"track-btns\">\r\n                <button onClick={() => { !isPlaying && onPlay(track) }} className=\"play\">\r\n                    <i className=\"material-icons\">{!isPlaying ? \"play_circle_fill\" : \"pause_circle_outline\"}</i>\r\n                </button>\r\n                <button onClick={e => {\r\n                    e.stopPropagation()\r\n                    onDelete(track)\r\n                }} className=\"delete\">\r\n                    <i className=\"material-icons\">delete</i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Track\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport Track from \"./Track\"\r\n\r\nconst PlayList = ({ \r\n    current, list, onAdd, onRemove, onPrev, onNext, onPlay, onArrange\r\n}) => {\r\n    const [dragIndex, setDragIndex] = useState(null)\r\n    const addTrackBtn = useRef()\r\n\r\n    \r\n    const addTracksHandler = tracks => {\r\n        [...tracks].forEach(tr => {\r\n            onAdd(tr)\r\n        });\r\n    }\r\n\r\n    const dragIndexHandler = (index) => {\r\n        setDragIndex(index)\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        window.ondragover = e => {\r\n            e.preventDefault()\r\n        }\r\n\r\n        window.ondrop = e => {\r\n            e.preventDefault()\r\n            if (e.dataTransfer.files.length) {\r\n                [...e.dataTransfer.files].forEach(tr => {\r\n                    onAdd(tr)\r\n                });\r\n            }\r\n        }\r\n    }, [onAdd])\r\n\r\n\r\n    return (\r\n        <div className=\"playlist\">\r\n            <div className=\"header\">\r\n                <h1>Playlist</h1>\r\n                <div className=\"playlist-btns\">\r\n                    <button onClick={e => addTrackBtn.current.click()}>\r\n                        <i className=\"material-icons\">playlist_add</i>\r\n                        <span>Add track</span>\r\n                        <input multiple={true} accept=\"audio/*,video/*\" style={{ display: \"none\" }} ref={addTrackBtn} type=\"file\" onChange={e => addTracksHandler(e.target.files)} />\r\n\r\n                    </button>\r\n                    <button onClick={onPrev} className=\"icon\">\r\n                        <i className=\"material-icons\">arrow_back</i>\r\n                    </button>\r\n                    <button onClick={onNext} className=\"icon\">\r\n                        <i className=\"material-icons\">arrow_forward</i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"tracks\">\r\n                {list.length > 0 ?\r\n                    list.map((track, index) => <Track\r\n                        onDelete={onRemove}\r\n                        onPlay={onPlay}\r\n                        isPlaying={current.name === track.name}\r\n                        key={track.name}\r\n                        track={track}\r\n                        dragIndex={dragIndex}\r\n                        onDragged={dragIndexHandler}\r\n                        onDrop={onArrange}\r\n                        index={index}\r\n                    />)\r\n                    : <h1>No tracks yet. You can drag-drop media here.</h1>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayList\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\n\r\nconst Player = ({ onTrackEnded, mediaSrc = '', loop = false }) => {\r\n    const [shouldHideControls, setShouldHideControls] = useState(false)\r\n    const [canHideControls, setCanHideControls] = useState(true)\r\n    const [shouldGoFull, setShouldGoFull] = useState(false)\r\n    const timeoutRef = useRef(null)\r\n    const playerRef = useRef(null)\r\n\r\n    // video state\r\n\r\n    const [canPlay, setCanPlay] = useState(false)\r\n    const [paused, setPaused] = useState(true)\r\n    const [playing, setPlaying] = useState(false)\r\n    const [vol, setVol] = useState(1)\r\n    const [muted, setMuted] = useState(false)\r\n\r\n\r\n    // element refs\r\n    const [video, setVideo] = useState(null)\r\n    const [volLine, setVolLine] = useState(null)\r\n    const [timeLine, setTimeLine] = useState(null)\r\n    const [timeEl, setTimeEl] = useState(null)\r\n\r\n    const volumeChangeHandler = e => {\r\n        const percentage = (video.volume * 100)\r\n        volLine.style.width = percentage + \"%\"\r\n        \r\n        if (video.muted!==muted) setMuted(video.muted)\r\n        if (video.volume !== vol) setVol(video.volume)\r\n    }\r\n\r\n    const pauseHandler = e => {\r\n        if (!canPlay) return\r\n        video.pause()\r\n        setPaused(true)\r\n        // !shouldHideControls && setShouldHideControls(true)\r\n    }\r\n\r\n    const playingHandler = e => {\r\n        setPaused(false)\r\n    }\r\n\r\n    const playHandler = e => {\r\n        if (!canPlay) return\r\n        video.play()\r\n        setPaused(false)\r\n\r\n        !shouldHideControls && setShouldHideControls(true)\r\n    }\r\n\r\n    const timeUpdateHandler = e => {\r\n        timeLine.style.width = (video.currentTime * 100 / video.duration) + \"%\"\r\n        timeEl.innerText = formatTime(video.currentTime) + \" / \" + formatTime(video.duration)\r\n    }\r\n    \r\n    const errorHandler = e => {\r\n    }\r\n\r\n    const volumeSeekHandler = e => {\r\n        const progressWrapper = volLine.closest(\".progress-wrapper\")\r\n        const percentage = (e.offsetX / progressWrapper.offsetWidth) * 100\r\n        video.volume = percentage / 100\r\n    }\r\n    \r\n    const videoSeekHandler = e => {\r\n        const progressWrapper = timeLine.closest(\".progress-wrapper\")\r\n        const percentage = (e.offsetX / progressWrapper.offsetWidth) * 100\r\n        video.currentTime = (percentage / 100) * video.duration || 0\r\n        timeEl.innerText = formatTime(video.currentTime) + \" / \" + formatTime(video.duration)\r\n    }\r\n\r\n    const playToggleHandler = () => {\r\n        video.paused ? playHandler() : pauseHandler()\r\n    }\r\n\r\n    const endedHandler = e => {\r\n        onTrackEnded()\r\n    }\r\n\r\n    const canPlayHandler = () => {\r\n        setCanPlay(true)\r\n    }\r\n\r\n    // util\r\n    function formatTime(seconds) {\r\n        const prepend0 = val => String(val < 10 ? '0' + (val || 0) : (val || 0))\r\n        let hours, mins, secs\r\n        hours = mins = secs = 0\r\n\r\n        hours = Math.floor(seconds / 3600)\r\n        mins = hours ? Math.floor(((seconds / 3600) - hours) * 60) : Math.floor(seconds / 60)\r\n        secs = hours ? Math.floor(((((seconds / 3600) - hours) * 60) - mins) * 60) : Math.floor(((seconds / 60) - mins) * 60)\r\n\r\n        return `${hours ? prepend0(hours) + ':' : ''}${prepend0(mins)}:${prepend0(secs)}`\r\n    }\r\n\r\n    const handleMouseMove = useCallback(() => {\r\n        const currentTimeoutRef = timeoutRef.current\r\n        currentTimeoutRef && clearTimeout(currentTimeoutRef)\r\n        if (!shouldHideControls && canHideControls) {\r\n            timeoutRef.current = setTimeout(() => {\r\n                setShouldHideControls(true)\r\n            }, 3000)\r\n        }\r\n        shouldHideControls && setShouldHideControls(false)\r\n    }, [shouldHideControls, canHideControls])\r\n\r\n\r\n    // side effects\r\n\r\n    useEffect(() => {\r\n        const isFull = document.fullscreenElement\r\n        const playerEl = playerRef.current\r\n        if (shouldGoFull) {\r\n            !isFull && playerEl && playerEl.requestFullscreen()\r\n        } else {\r\n            isFull && document.exitFullscreen()\r\n        }\r\n    }, [shouldGoFull])\r\n\r\n    useEffect(() => {\r\n        paused === playing && setPlaying(!paused)\r\n    }, [paused, playing])\r\n\r\n    useEffect(() => {\r\n        video && setVol(video.volume)\r\n    }, [video])\r\n\r\n\r\n    return (\r\n        <div\r\n            ref={playerRef}\r\n            onMouseLeave={e => {\r\n                !shouldHideControls && setShouldHideControls(true)\r\n            }}\r\n            onMouseMove={handleMouseMove}\r\n            className={`player`}\r\n        >\r\n            <video\r\n                onCanPlay={canPlayHandler}\r\n                onPause={pauseHandler}\r\n                onPlay={playHandler}\r\n                onPlaying={playingHandler}\r\n                onVolumeChange={volumeChangeHandler}\r\n                onTimeUpdate={timeUpdateHandler}\r\n                onEnded={endedHandler}\r\n                ref={setVideo}\r\n                onClick={playToggleHandler}\r\n                onError={errorHandler}\r\n                autoPlay\r\n                loop={loop}\r\n                src={mediaSrc}\r\n                poster=\"poster.jpeg\"\r\n            />\r\n\r\n            {canPlay &&\r\n                <div onClick={playToggleHandler}\r\n                    className={`video-overlay ${playing ? \"hidden\" : \"\"}`}>\r\n                    <button className=\"icon\">\r\n                        <i className=\"material-icons\">\r\n                            {`${playing ? \"pause\" : \"play\"}_circle_outline`}\r\n                        </i>\r\n                    </button>\r\n                </div>\r\n            }\r\n            <div\r\n                onMouseOver={e => {\r\n                    if (e.target.closest(\".controls\")) {\r\n                        canHideControls && setCanHideControls(false)\r\n                    }\r\n                }}\r\n                onMouseLeave={e => {\r\n                    setCanHideControls(true)\r\n                }}\r\n                className={`controls ${shouldHideControls && \"hidden\"}`}>\r\n                <div className=\"btns\">\r\n                    <div className=\"left\">\r\n                        <button onClick={playToggleHandler} className=\"icon\">\r\n                            <i className=\"material-icons\">\r\n                                {`${playing ? \"pause\" : \"play\"}_circle_outline`}\r\n                            </i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"middle\"><h6 ref={setTimeEl}>00:00 / 00:00</h6></div>\r\n                    <div className=\"right\">\r\n                        <button\r\n                            onClick={e => setShouldGoFull(prev => !prev)}\r\n                            className=\"icon\"\r\n                        >\r\n                            <i className=\"material-icons\">fullscreen</i>\r\n                        </button>\r\n                        <div className=\"volume-wrapper\">\r\n                            <button className=\"icon\">\r\n                                <ProgressLineWrapper setLine={setVolLine} level={vol} eventHandler={volumeSeekHandler} />\r\n                                <i onClick={e => {video.muted = !(video.muted)}} className=\"material-icons\">{muted ? \"volume_off\" : \"volume_up\"}</i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ProgressLineWrapper setLine={setTimeLine} eventHandler={videoSeekHandler} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProgressLineWrapper = ({ setLine, eventHandler, level = 0 }) => {\r\n    const [wrapper, setWrapper] = useState(null)\r\n    const [eventset, setEventset] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (wrapper && !eventset) {\r\n            setEventset(true)\r\n            wrapper.addEventListener(\"click\", eventHandler)\r\n        }\r\n    }, [wrapper, eventHandler, eventset])\r\n\r\n    return (\r\n        <div ref={setWrapper} className=\"progress-wrapper\">\r\n            <div ref={setLine} style={{ width: (level * 100) + \"%\" }} className=\"progress-line\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player\r\n","import React, { useState, useRef } from 'react'\r\nimport PlayList from \"./PlayList\"\r\nimport Player from \"./Player\"\r\n\r\nconst Music = () => {\r\n    const videoRef = useRef(document.createElement('video'))\r\n    const [current, setCurrent] = useState(new Audio())\r\n    const [list, setList] = useState([])\r\n\r\n    const removeHandler = file => {\r\n        setList(list => list.filter(track => track.name !== file.name))\r\n        if (current.name === file.name) {\r\n            setCurrent(new Audio())\r\n            nextHandler()\r\n        }\r\n    }\r\n\r\n    const addHandler = file => {\r\n        if (!videoRef.current.canPlayType(file.type)) return\r\n        if (list.some(tr => tr.name === file.name)) return\r\n        setList(list => [...list, file])\r\n    }\r\n\r\n    const playHandler = file => {\r\n        file.src = URL.createObjectURL(file)\r\n        setCurrent(file)\r\n    }\r\n\r\n    const nextHandler = () => {\r\n        const newList = [...list]\r\n        let index = newList.findIndex(tr => tr.name === current.name)\r\n        let newIndex = index === (list.length - 1) ? 0 : index + 1\r\n        \r\n        if (newList[newIndex]) {\r\n            playHandler(newList[newIndex])\r\n            return\r\n        }   \r\n        \r\n    }\r\n\r\n    const arrangeHandler = (index, newIndex, isUp) => {\r\n        if (index === newIndex) return\r\n        const newList = [...list]\r\n        \r\n        \r\n        if (newIndex === 0 && isUp) {\r\n            const file = newList.splice(index, 1)[0]\r\n            return setList([file, ...newList])\r\n        }\r\n\r\n        newIndex += 1;\r\n\r\n        const inFrontList = newIndex > index\r\n\r\n        const frontList = newList.slice(0, newIndex)\r\n        const backList = newList.slice(newIndex)\r\n\r\n        const file = newList.splice(index, 1)[0]\r\n        \r\n        if (inFrontList) {\r\n            frontList.splice(index, 1) \r\n        } else {\r\n            backList.splice(index - frontList.length, 1)\r\n        }\r\n        \r\n        \r\n        setList([...frontList, file, ...backList])\r\n    }\r\n    \r\n    const prevHandler = () => {\r\n        const newList = [...list]\r\n        let index = newList.findIndex(tr => tr.name === current.name)\r\n\r\n        let newIndex = index === 0 ? (list.length - 1) : index - 1\r\n        \r\n        if (newList[newIndex]) {\r\n            playHandler(newList[newIndex])\r\n            return\r\n        }\r\n    }\r\n\r\n    return <>\r\n        <Player onTrackEnded={nextHandler} mediaSrc={current.src} />\r\n        <PlayList\r\n            list={list}\r\n            current={current}\r\n            onRemove={removeHandler}\r\n            onNext={nextHandler}\r\n            onPrev={prevHandler}\r\n            onAdd={addHandler}\r\n            onPlay={playHandler}\r\n            onArrange={arrangeHandler}\r\n        />\r\n    </>\r\n}\r\n\r\nexport default Music","import React from 'react'\r\nimport Music from \"./Music\"\r\n\r\nconst Main = () => {\r\n\r\n    return (\r\n        <main>\r\n            <Music />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}